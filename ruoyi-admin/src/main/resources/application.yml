# 项目相关配置
ruoyi:
  # 名称
  name: RuoYi
  # 版本
  version: 4.1.0
  # 版权年份
  copyrightYear: 2019
  # 实例演示开关
  demoEnabled: false
  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）
  profile: D:/ruoyi/uploadPath
  # 获取ip地址开关
  addressEnabled: false
  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath/tempDir，Linux配置 /home/ruoyi/uploadPath/tempDir
  tempDir: D:/ruoyi/uploadPath/tempDir
duyan:
  apikey: SrM6S9OQAFxktfTzD2pBX9yPDtWWlLZs
  tokenUrl: https://open.duyansoft.com/api/v1/account/login/cti
  logUrl: https://open.duyansoft.com/api/v1/call_log
  soundRecordingUrl: https://open.duyansoft.com/api/v1/call/recording

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为80
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 500
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30
    accept-count: 10000
    max-connections: 10000000
  max-http-header-size: 204800

# 日志配置
logging:
  level:
    com.ruoyi: debug
    org.springframework: error

# 用户配置
user:
  password:
    # 密码错误{maxRetryCount}次锁定10分钟
    maxRetryCount: 5

# Spring配置
spring:
  # 模板引擎
  thymeleaf:
    mode: HTML
    encoding: utf-8
    # 禁用缓存
    cache: false
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: static/i18n/messages
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  profiles: 
    active: druid
  # 文件上传
  servlet:
     multipart:
       # 单个文件大小
       max-file-size:  20MB
       # 设置总上传的文件大小
       max-request-size:  20MB
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true
    freemarker:
      cache: true

# MyBatis
mybatis:
    # 搜索指定包别名
    typeAliasesPackage: com.ruoyi.**.domain
    # 配置mapper的扫描，找到所有的mapper.xml映射文件
    mapperLocations: classpath*:mapper/**/*Mapper.xml
    # 加载全局的配置文件
    configLocation: classpath:mybatis/mybatis-config.xml

# PageHelper分页插件
pagehelper: 
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql 

# Shiro
shiro:
  user:
    # 登录地址
    loginUrl: /login
    # 权限认证失败地址
    unauthorizedUrl: /unauth
    # 首页地址
    indexUrl: /index
    # 验证码开关
    captchaEnabled: false
    # 验证码类型 math 数组计算 char 字符
    captchaType: math
  cookie:
    # 设置Cookie的域名 默认空，即当前访问的域名
    domain: 
    # 设置cookie的有效访问路径
    path: /
    # 设置HttpOnly属性
    httpOnly: true
    # 设置Cookie的过期时间，天为单位
    maxAge: 30
  session:
    # Session超时时间，-1代表永不过期（默认30分钟）
    expireTime: 30
    # 同步session到数据库的周期（默认1分钟）
    dbSyncPeriod: 1
    # 相隔多久检查一次session的有效性，默认就是10分钟
    validationInterval: 10
    # 同一个用户最大会话数，比如2的意思是同一个账号允许最多同时两个人登录（默认-1不限制）
    maxSession: -1
    # 踢出之前登录的/之后登录的用户，默认踢出之前登录的用户
    kickoutAfter: false

# 防止XSS攻击
xss: 
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice/*
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*

http:
  ruleEngineUrl: http://106.15.60.221:8081
  assetUrl: http://localhost:8080
  robotUrl: http://pre-crm.indata.cc
#  robotUrl: https://base-crm.indata.cc
  radioQualityCheckUrl: http://172.167.1.106:8380

ruleEngine:
  allocatTaskUrl: ${http.ruleEngineUrl}/api/invokeRule
  rulePackage: 资产规则集/
#  rulePackage: 资产规则集/caseAutoDistribution
#  processId: caseAutoDistribution
asset:
  viewRepayHisUrl: ${http.assetUrl}/assetspackage/remote/getAssetsRepaymentInfoByOrgCasNo
  closeCaseUrl: ${http.assetUrl}/import/assets/closeCase
  getAssetsUrl: ${http.assetUrl}/assetspackage/remote/selectOneAsset
robot:
  appKey: N1q1UvrrrHh53koJ
  appSecret: eI2IwDBklMfWbEj8B8rKvwkXPmlTwQ
#  appKey: BB1w85jIgRA52nSp
#  appSecret: sxJTHsBDPPpFqaW3rj31yMWoX9vW8u
  task:
    createTask: ${http.robotUrl}/openapi/v1/task/createTask
    start: ${http.robotUrl}/openapi/v1/task/start
    pause: ${http.robotUrl}/openapi/v1/task/pause
    stop: ${http.robotUrl}/openapi/v1/task/stop
    delete: ${http.robotUrl}/openapi/v1/task/delete
    importTaskCustomer: ${http.robotUrl}/openapi/v1/task/importTaskCustomer
    update: ${http.robotUrl}/openapi/v1/task/update
    getSceneVariables: ${http.robotUrl}/openapi/v1/task/getSceneVariables
    getTasks: ${http.robotUrl}/openapi/v1/task/getTasks
    getTaskDetail: ${http.robotUrl}/openapi/v1/task/getTaskDetail
    queryDoneTaskPhones: ${http.robotUrl}/openapi/v1/task/queryDoneTaskPhones
    notDialedCustomerList: ${http.robotUrl}/openapi/v1/task/notDialedCustomerList
    phoneLogInfo: ${http.robotUrl}/openapi/v1/task/phoneLogInfo
  company:
    getCompanys: ${http.robotUrl}/openapi/v1/company/getCompanys
    getPhones: ${http.robotUrl}/openapi/v1/company/getPhones
    getRobots: ${http.robotUrl}/openapi/v1/company/getRobots
    addBlackList: ${http.robotUrl}/openapi/v1/company/addBlackList
  callback:
    queryUnCallBack: ${http.robotUrl}/openapi/v1/callBack/queryUnCallBack
radioQualityCheck:
  sendRadio: ${http.radioQualityCheckUrl}/nbdp-web/cqc/call/batch/v1/api.do


enable:
  allocatTaskAverageNum: false
  allocatTaskAverageMoney: false
  #是否开启定时创建并启动机器人任务
  startRobotTask: false
  #是否开启定时生成报表任务
  createReport: true
  #是否开启历史数据迁移
#  hisDataMigrate: true

google:
  local:
    cache:
      concurrencyLevel: 100
      maxSize: 100
      # 单位：天
      expireAfterWrite: 30

cron:
  # 每隔一小时执行一次0 0 0/1 * * ? ：测试使用，每隔10分钟执行一次0 */10 * * * ?
#  startRobotTask: 0 */5 * * * ?
  # 每天晚上22点执行：正式使用使用
  startRobotTask: 0 0 22 * * ?
  # 每隔一小时执行一次0 0 0/1 * * ? ：测试使用，每隔10分钟执行一次0 */10 * * * ?
#  createReport: 0 */3 * * * ?
  # 每天晚上22点执行：正式使用使用
  createReport: 0 0 22 * * ?

isEnableTimer: true

